generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["digiduct"]
}

model admin {
  id           Int            @id @default(autoincrement())
  username     String         @unique(map: "admin_unique") @db.VarChar
  password     String         @db.VarChar
  token        String         @db.VarChar
  email        String         @db.VarChar
  phone        String         @db.VarChar
  add_by       String         @db.VarChar
  add_on       DateTime       @db.Timestamp(6)
  edit_by      String?        @db.VarChar
  edit_on      DateTime?      @db.Timestamp(6)
  del_by       String?        @db.VarChar
  del_on       DateTime?      @db.Timestamp(6)
  post_article post_article[]

  @@schema("digiduct")
}

model category {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar
  add_by           String             @db.VarChar
  add_on           DateTime           @db.Timestamp(6)
  edit_by          String?            @db.VarChar
  edit_on          DateTime?          @db.Timestamp(6)
  del_by           String?            @db.VarChar
  del_on           DateTime?          @db.Timestamp(6)
  product_category product_category[]

  @@schema("digiduct")
}

model post_article {
  id               Int                @id @default(autoincrement())
  title            String?            @db.VarChar(255)
  slug             String?            @unique @db.VarChar(255)
  content          String?
  thumbnail        String?            @db.VarChar(255)
  status           String?            @db.VarChar(20)
  published_on     DateTime?          @db.Timestamp(6)
  author_username  String?            @db.VarChar
  category_id      Int?
  meta_title       String?            @db.VarChar(255)
  meta_description String?            @db.VarChar(255)
  meta_keywords    String?            @db.VarChar(255)
  og_title         String?            @db.VarChar(255)
  og_description   String?            @db.VarChar(255)
  og_image         String?            @db.VarChar(255)
  add_on           DateTime?          @db.Timestamp(6)
  edit_on          DateTime?          @db.Timestamp(6)
  del_on           DateTime?          @db.Timestamp(6)
  admin            admin?             @relation(fields: [author_username], references: [username], onDelete: NoAction, onUpdate: NoAction)
  post_category    post_category?     @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  post_article_tag post_article_tag[]

  @@schema("digiduct")
}

model post_article_tag {
  article_id   Int
  tag_id       Int
  post_article post_article @relation(fields: [article_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  post_tag     post_tag     @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([article_id, tag_id], map: "post_article_tag_pk")
  @@schema("digiduct")
}

model post_category {
  id           Int            @id @default(autoincrement())
  name         String?        @db.VarChar(100)
  slug         String?        @unique @db.VarChar(100)
  add_on       DateTime?      @db.Timestamp(6)
  edit_on      DateTime?      @db.Timestamp(6)
  del_on       DateTime?      @db.Timestamp(6)
  post_article post_article[]

  @@schema("digiduct")
}

model post_tag {
  id               Int                @id @default(autoincrement())
  name             String?            @db.VarChar(50)
  slug             String?            @unique @db.VarChar(50)
  add_on           DateTime?          @db.Timestamp(6)
  edit_on          DateTime?          @db.Timestamp(6)
  del_on           DateTime?          @db.Timestamp(6)
  post_article_tag post_article_tag[]

  @@schema("digiduct")
}

model product {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar
  description      String?
  image_path       String?            @db.VarChar
  add_by           String             @db.VarChar
  add_on           DateTime           @db.Timestamp(6)
  edit_by          String?            @db.VarChar
  edit_on          DateTime?          @db.Timestamp(6)
  del_by           String?            @db.VarChar
  del_on           DateTime?          @db.Timestamp(6)
  product_category product_category[]
  product_feature  product_feature[]
  product_package  product_package[]

  @@schema("digiduct")
}

model product_category {
  product_id  Int
  category_id Int
  add_by      String    @db.VarChar
  add_on      DateTime  @db.Timestamp(6)
  edit_by     String?   @db.VarChar
  edit_on     DateTime? @db.Timestamp(6)
  del_by      String?   @db.VarChar
  del_on      DateTime? @db.Timestamp(6)
  category    category  @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product     product   @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([product_id, category_id], map: "product_category_product_id_category_id_idx")
  @@schema("digiduct")
}

model product_feature {
  id         Int     @id @default(autoincrement())
  product_id Int
  name       String  @db.VarChar
  product    product @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([product_id, id], map: "product_feature_product_id_id_idx")
  @@schema("digiduct")
}

model product_package {
  id         Int       @id @default(autoincrement())
  product_id Int
  name       String    @db.VarChar
  period     Int
  price      Int
  stock      Int
  status     Int?      @default(1)
  add_by     String    @db.VarChar
  add_on     DateTime  @db.Timestamp(6)
  edit_by    String?   @db.VarChar
  edit_on    DateTime? @db.Timestamp(6)
  del_by     String?   @db.VarChar
  del_on     DateTime? @db.Timestamp(6)
  product    product   @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([product_id, id], map: "product_package_product_id_id_idx")
  @@schema("digiduct")
}

model product_transactions {
  id                  Int       @id @default(autoincrement())
  uuid                String?   @db.VarChar(100)
  user_id             Int
  product_id          Int
  product_name        String    @db.VarChar
  product_description String
  package_id          Int
  package_name        String    @db.VarChar
  package_period      Int
  package_price       Int
  category_id         Int
  category_name       String    @db.VarChar
  status              String    @default("PENDING") @db.VarChar
  prove_path          String?   @db.VarChar
  review              String?   @db.VarChar
  rating              Int?
  add_by              String    @db.VarChar
  add_on              DateTime  @default(dbgenerated("'2025-08-09 15:52:43.230083'::timestamp without time zone")) @db.Timestamp(6)
  edit_by             String?   @db.VarChar
  edit_on             DateTime? @db.Timestamp(6)
  del_by              String?   @db.VarChar
  del_on              DateTime? @db.Timestamp(6)

  @@unique([id, uuid], map: "product_transactions_unique")
  @@schema("digiduct")
}

model user {
  id      Int       @id @default(autoincrement())
  phone   String    @db.VarChar
  email   String?   @db.VarChar
  status  Int       @default(1)
  add_by  String    @db.VarChar
  add_on  DateTime  @default(dbgenerated("'2025-08-04 15:33:14.379892'::timestamp without time zone")) @db.Timestamp(6)
  edit_by String?   @db.VarChar
  edit_on DateTime? @db.Timestamp(6)
  del_by  String?   @db.VarChar
  del_on  DateTime? @db.Timestamp(6)

  @@schema("digiduct")
}
